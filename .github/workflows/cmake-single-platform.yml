# This starter workflow is for a CMake project running on a single platform.
# See: https://github.com/actions/starter-workflows/blob/main/ci/cmake-single-platform.yml
name: Build and Test

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

env:
  # Customize the CMake build type here (Release, Debug, RelWithDebInfo, etc.)
  BUILD_TYPE: Release

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4
        with:
          submodules: recursive # Checkout submodules if any

      - name: Create Build Directory
        # Explicitly create the build directory.  This can prevent some issues.
        run: mkdir -p ${{github.workspace}}/build

      - name: Configure CMake
        # Configure CMake in a 'build' subdirectory. `CMAKE_BUILD_TYPE` is only required if you are using a single-configuration generator such as make.
        # See https://cmake.org/cmake/help/latest/variable/CMAKE_BUILD_TYPE.html?highlight=cmake_build_type
        working-directory: ${{github.workspace}}/build # Change to build directory
        run: cmake -DCMAKE_BUILD_TYPE=${{env.BUILD_TYPE}} .. # .. goes up one level to source dir

      - name: Build
        # Build your program with the given configuration
        working-directory: ${{github.workspace}}/build # Change to build directory
        run: cmake --build . --config ${{env.BUILD_TYPE}} # . refers to current directory

      - name: Test
        working-directory: ${{github.workspace}}/build
        # Execute tests defined by the CMake configuration.
        # See https://cmake.org/cmake/help/latest/manual/ctest.1.html for more detail
        run: ctest -C ${{env.BUILD_TYPE}}

      - name: Upload Artifacts (Optional)
        # Upload build artifacts (e.g., binaries) if needed.
        uses: actions/upload-artifact@v3
        with:
          name: build-artifacts
          path: ${{github.workspace}}/build/* # Customize the path
