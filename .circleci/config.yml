# Use the latest 2.1 version of CircleCI pipeline process engine.
# See: https://circleci.com/docs/configuration-reference
version: 2.1

# Define a job to be invoked later in a workflow.
# See: https://circleci.com/docs/jobs-steps/#jobs-overview & https://circleci.com/docs/configuration-reference/#jobs
jobs:
  build-and-test:
    docker:
      - image: ubuntu:22.04 # Use a specific, recent Ubuntu image.  Good for compatibility.

    working_directory: ~/repo

    steps:
      - checkout

      # Install Dependencies (GLFW Version)
      - run:
          name: Install Dependencies (GLFW)
          command: |
            apt-get update
            apt-get install -y cmake g++ libglfw3-dev libglm-dev libx11-dev libxrandr-dev libxinerama-dev libxcursor-dev libxi-dev mesa-common-dev
            #You could add libglew-dev if using glew
            
      # --- OR --- (Comment out the GLFW section above and uncomment this for SDL)
      # - run:
      #     name: Install Dependencies (SDL)
      #     command: |
      #       apt-get update
      #       apt-get install -y cmake g++ libsdl2-dev libglm-dev libx11-dev mesa-common-dev
      #       #You could add libglew-dev if using glew

      # Restore Cache (if it exists)
      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "CMakeLists.txt" }}
            - v1-dependencies-  # Fallback to a previous cache if checksum doesn't match

      # Build the Project
      - run:
          name: Configure CMake
          command: cmake -B build -DCMAKE_BUILD_TYPE=Release  # Create a 'build' directory and configure

      - run:
          name: Build
          command: cmake --build build --config Release # Build in Release mode

      # Save Cache (for faster builds next time)
      - save_cache:
          paths:
            - build  # Cache the build directory
          key: v1-dependencies-{{ checksum "CMakeLists.txt" }}

      # Run Tests (Replace 'Box3D_Testbed' with your actual executable name)
      - run:
          name: Run Tests
          command: |
            cd build
             #For GUI based apps, you might need xvfb-run
            xvfb-run ./Box3D_Testbed # Assuming your testbed is built and named this
          
          #Optional working test command, may not work
          #command: ./build/Box3D_Testbed


workflows:
  build-test-workflow:
    jobs:
      - build-and-test
